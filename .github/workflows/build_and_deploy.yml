# As much as possible, this file should be kept in sync with
# https://github.com/napari/napari/blob/main/.github/workflows/build_docs.yml
#
# Note this workflow is also triggered by
# https://github.com/napari/napari/blob/main/.github/workflows/deploy_docs.yml when a
# commit to `main` occurs in `napari/napari`

name: Full Build & Deploy of Docs
# this does a full build of the docs for deployment
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      target_directory:
        description: 'The directory to deploy the docs to'
        required: true
        default: 'dev'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    name: Build & Upload Artifact
    runs-on: ubuntu-latest
    env:
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache
    steps:
      - name: Clone docs repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # place in '/home/runner/work/docs/docs/docs'
          path: docs  # place in a named directory

      - name: Clone main repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # place in '/home/runner/work/docs/docs/napari'
          path: napari  # place in a named directory
          repository: napari/napari
          # ensure version metadata is proper
          fetch-depth: 0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.10"
          cache-dependency-path: |
            napari/pyproject.toml

      - name: Cache pooch downloads
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: |
            ${{ github.workspace }}/.cache/scikit-image
            ${{ github.workspace }}/.cache/napari-*
            ${{ github.workspace }}/.cache/pooch
          key: pooch

      - uses: tlambert03/setup-qt-libs@19e4ef2d781d81f5f067182e228b54ec90d23b76 # v1.8

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "napari/[pyqt5, docs]"
        env:
          PIP_CONSTRAINT: ${{ github.workspace }}/napari/resources/constraints/constraints_py3.10_docs.txt

      - name: Testing
        run: |
          python -c 'import napari; print(napari.__version__)'
          python -c 'import napari.layers; print(napari.layers.__doc__)'

      - name: Create fallback videos
        run: |
          sudo apt-get update && sudo apt-get install -y ffmpeg
          cd docs
          make fallback-videos

      - name: Build Docs
        uses: aganders3/headless-gui@f85dd6316993505dfc5f21839d520ae440c84816 # v2.2
        env:
          GOOGLE_CALENDAR_ID: ${{ secrets.GOOGLE_CALENDAR_ID }}
          GOOGLE_CALENDAR_API_KEY: ${{ secrets.GOOGLE_CALENDAR_API_KEY }}
          PIP_CONSTRAINT: ${{ github.workspace }}/napari/resources/constraints/constraints_py3.10_docs.txt
        with:
          # Runs in '/home/runner/work/docs/docs/docs'
          # Built HTML pages in '/home/runner/work/docs/docs/docs/docs/_build/html'
          run:  make -C docs html
          # skipping setup stops the action from running the default (tiling) window manager
          # the window manager is not necessary for docs builds at this time and it was causing
          # problems with screenshots (https://github.com/napari/docs/issues/285)
          linux-setup: "echo 'skip setup'"
          linux-teardown: "echo 'skip teardown'"

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: html
          path: docs/docs/_build/html/

  deploy:
    name: Download & Deploy Artifact
    needs: build-and-upload
    runs-on: ubuntu-latest
    # Working directory: '/home/runner/work/docs/docs'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: html
          # Downloads to '/home/runner/work/docs/docs/html'
          path: html

      - name: Deploy Docs
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/main'))
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: napari/napari.github.io
          publish_dir: ./html
          publish_branch: gh-pages
          destination_dir: ${{ github.event.inputs.target_directory || 'dev' }}
          cname: napari.org
