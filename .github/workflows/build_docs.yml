# As much as possible, this file should be kept in sync with
# https://github.com/napari/docs/blob/main/.github/workflows/build_and_deploy_docs.yml
name: Build PR Docs

on:
  pull_request:
    types:
        - opened
        - synchronize
  workflow_dispatch:
    inputs:
      make_target:
        description: "Enter make target: html html-noplot docs slimfast slimgallery"
        type: string
        default: 'slimfast'
  workflow_call:
    inputs:
      make_target:
        description: "Enter make target: html html-noplot docs slimfast slimgallery"
        type: string
        default: 'slimfast'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    name: Build & Upload Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Clone docs repo
        uses: actions/checkout@v4
        with:
          # place in '/home/runner/work/docs/docs/docs'
          path: docs  # place in a named directory

      - name: Clone main repo
        uses: actions/checkout@v4
        with:
          # place in '/home/runner/work/docs/docs/napari'
          path: napari  # place in a named directory
          repository: napari/napari
          # ensure version metadata is proper
          fetch-depth: 0



      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
            owner,
            repo,
            pull_number: number,
            });
            return pr.data.head.sha 
            
      - name: Create Pending Status Check
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "pending",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Running",
            });

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache-dependency-path: |
            napari/pyproject.toml

      - uses: tlambert03/setup-qt-libs@v1

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "napari/[pyqt5, docs]"
        env:
          PIP_CONSTRAINT: ${{ github.workspace }}/napari/resources/constraints/constraints_py3.10_docs.txt

      - name: Testing
        run: |
          python -c 'import napari; print(napari.__version__)'
          python -c 'import napari.layers; print(napari.layers.__doc__)'

      - name: Build Docs
        uses: aganders3/headless-gui@v2
        env:
          GOOGLE_CALENDAR_ID: ${{ secrets.GOOGLE_CALENDAR_ID }}
          GOOGLE_CALENDAR_API_KEY: ${{ secrets.GOOGLE_CALENDAR_API_KEY }}
          PIP_CONSTRAINT: ${{ github.workspace }}/napari/resources/constraints/constraints_py3.10_docs.txt
        with:
          run:  make -C docs ${{ github.event_name == 'pull_request' && 'slimfast' || inputs.make_target }}
          # skipping setup stops the action from running the default (tiling) window manager
          # the window manager is not necessary for docs builds at this time and it was causing
          # problems with screenshots (https://github.com/napari/docs/issues/285)
          linux-setup: "echo 'skip setup'"
          linux-teardown: "echo 'skip teardown'"

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/docs/_build/html

      - name: Create Unsuccessful Status Check
        if: ${{ steps.upload.outcome }} == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "failure",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Failed",
            }); 
            
      - name: Create Successful Status Check
        if: ${{ steps.upload.outcome }} == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: "${{ steps.sha.outputs.result }}", 
            state: "success",
            target_url: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            description: "Passed",
            });