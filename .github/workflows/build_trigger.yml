name: Docs Build Trigger

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      make_target:
        description: "Enter make target: html html-noplot docs slimfast slimgallery"
        type: string
        default: 'slimfast'

permissions:
  checks: read
  contents: read

jobs:
  determine-target:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.determine-target.outputs.target }}
    if: |
      (github.event_name == 'issue_comment' && 
        github.event.issue.pull_request != '' && 
        contains(github.event.comment.body, '@napari-bot make')) ||
      github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Determine make target
        id: determine-target
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
          MAKE_TARGET_INPUT: ${{ github.event.inputs.make_target }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -z "$MAKE_TARGET_INPUT" ]; then
              echo "::error::No make target provided in workflow dispatch input."
              exit 1
            fi
            echo "Using manual input target: $MAKE_TARGET_INPUT"
            echo "target=$MAKE_TARGET_INPUT" >> "$GITHUB_OUTPUT"
          else
            # Safely handle comment body through environment variable
            TARGET=$(echo "$COMMENT_BODY" | grep -oP '(?<=make\s)\w+' || echo "slimfast")
            ALLOWED_TARGETS="html html-noplot docs slimfast slimgallery"
            if ! grep -qw "$TARGET" <<< "$ALLOWED_TARGETS"; then
              echo "::error::Invalid target '$TARGET'. Allowed targets: $ALLOWED_TARGETS"
              exit 1
            fi
            echo "Using comment target: $TARGET"
            echo "target=$TARGET" >> "$GITHUB_OUTPUT"
          fi

  trigger-circleci:
    needs: determine-target
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      MAKE_TARGET: ${{ needs.determine-target.outputs.target }}
    steps:
      - name: Trigger CircleCI Pipeline
        run: |
          # Validate branch name isn't empty
          if [ -z "$BRANCH_NAME" ]; then
            echo "::error::Branch name is empty"
            exit 1
          fi

          curl -X POST \
            -H "Content-Type: application/json" \
            -H "Circle-Token: ${{ secrets.CIRCLECI_TOKEN }}" \
            -d '{
              "branch": "'"$BRANCH_NAME"'",
              "parameters": {
                "make_target": "'"$MAKE_TARGET"'"
              }
            }' \
            "https://circleci.com/api/v2/project/gh/psobolewskiPhD/napari-docs/pipeline"

  trigger-artifact-build:
    needs: determine-target
    uses: ./.github/workflows/build_docs.yml
    with:
      make_target: ${{ needs.determine-target.outputs.target }}

  report-status:
    needs: [determine-target, trigger-artifact-build]
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Artifact Build Checks
        id: wait-checks
        uses: poseidon/wait-for-status-checks@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          match_pattern: "build_docs.yml"

      - name: Update PR Check
        uses: LouisBrunner/checks-action@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "ðŸ“š Documentation Build"
          status: "completed"
          conclusion: ${{ needs.trigger-artifact-build.result || 'neutral' }}
          sha: ${{ github.event.pull_request.head.sha }}
          details_url: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"