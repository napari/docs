name: Docs Build Trigger

on:
  issue_comment:
    types: [created]
  pull_request:
    paths:
      - '.github/workflows/circle_trigger.yml'
  workflow_dispatch:
    inputs:
      make_target:
        description: "Enter make target: html docs slimfast slimgallery"
        type: string

jobs:
  trigger-circleci:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request != '' && 
       contains(github.event.comment.body, '@napari-bot make')) ||
      github.event_name == 'workflow_dispatch'
    steps:
      - name: Determine make target
        id: determine-target
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Using manual input target: ${{ inputs.make_target }}"
            echo "target=${{ inputs.make_target }}" >> "$GITHUB_OUTPUT"
          else
            # Safely handle comment body through environment variable
            TARGET=$(echo "$COMMENT_BODY" | grep -oP '(?<=make\s)\w+' || echo "slimfast")
            ALLOWED_TARGETS="html docs slimfast slimgallery"
            # Add quotes to prevent word splitting
            if ! grep -qw "$TARGET" <<< "$ALLOWED_TARGETS"; then
              echo "::error::Invalid target '$TARGET'. Allowed targets: $ALLOWED_TARGETS"
              exit 1
            fi
            echo "Using comment target: $TARGET"
            echo "target=$TARGET" >> "$GITHUB_OUTPUT"
          fi

      - name: Trigger CircleCI Pipeline
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Circle-Token: ${{ secrets.CIRCLECI_TOKEN }}" \
          -d '{
            "branch": "'"${{ github.head_ref || github.ref_name }}"'",  # Use head_ref for PRs
            "parameters": {
              "make_target": "'"${{ steps.determine-target.outputs.target }}"'"
            }
          }' \
          "https://circleci.com/api/v2/project/gh/psobolewskiPhD/napari-docs/pipeline"
        
      - name: Wait for CircleCI Job Completion
        uses: larsoner/circleci-artifacts-redirector-action@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          api-token: ${{ secrets.CIRCLECI_TOKEN }}
          artifact-path: 0/docs/docs/_build/html/index.html
          circleci-jobs: build-docs
          job-title: "Check the ${{ steps.determine-target.outputs.target }} build here!"
